@page "/admin/leaves"
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize(Roles = "Admin")]
@inject LeavesService LeavesService
@inject EmployeeService EmployeeService

@code {
    private List<Leave> leaveRequests = new List<Leave>();
    private Dictionary<int, Employee> employees = new Dictionary<int, Employee>();

    protected override async Task OnInitializedAsync()
    {
        leaveRequests = await LeavesService.GetLeavesValidationAsync();
        foreach (var leave in leaveRequests)
        {
            if (!employees.ContainsKey(leave.EmployeeId))
            {
                var employee = await EmployeeService.GetEmployeeByIdAsync(leave.EmployeeId);
                if (employee != null)
                {
                    employees[leave.EmployeeId] = employee;
                }
            }
        }
    }

    private async Task ApproveLeave(int leaveId)
    {
        await LeavesService.UpdateLeaveStatusAsync(leaveId, "Approved");
        leaveRequests = await LeavesService.GetLeavesValidationAsync();
        await LoadEmployees();
    }

    private async Task RejectLeave(int leaveId)
    {
        await LeavesService.UpdateLeaveStatusAsync(leaveId, "Rejected");
        leaveRequests = await LeavesService.GetLeavesValidationAsync();
        await LoadEmployees();
    }

    private async Task LoadEmployees()
    {
        foreach (var leave in leaveRequests)
        {
            if (!employees.ContainsKey(leave.EmployeeId))
            {
                var employee = await EmployeeService.GetEmployeeByIdAsync(leave.EmployeeId);
                if (employee != null)
                {
                    employees[leave.EmployeeId] = employee;
                }
            }
        }
    }
}

<div class="container-fluid p-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h1 class="fw-bold text-primary mb-1">Gestion des Congés</h1>
            <p class="text-muted">Validez les demandes de congés de vos employés</p>
        </div>
        <div class="date-display p-2 rounded-3 bg-light">
            <i class="bi bi-calendar3 me-2"></i>@DateTime.Now.ToString("dd MMMM yyyy")
        </div>
    </div>

    <div class="card border-0 shadow-sm">
        <div class="card-body p-0">
            <div class="table-responsive">
                <table class="table table-hover align-middle mb-0">
                    <thead class="bg-light">
                        <tr>
                            <th class="border-0 px-4 py-3">Employé</th>
                            <th class="border-0 px-4 py-3">Période</th>
                            <th class="border-0 px-4 py-3">Status</th>
                            <th class="border-0 px-4 py-3 text-end">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (leaveRequests != null && leaveRequests.Any())
                        {
                            @foreach (var leave in leaveRequests)
                            {
                                <tr>
                                    <td class="px-4 py-3">
                                        <div class="d-flex align-items-center gap-3">
                                            <div class="avatar bg-primary-subtle rounded-circle p-2">
                                                <i class="bi bi-person text-primary"></i>
                                            </div>
                                            <div>
                                                <h6 class="mb-0">
                                                    @(employees.ContainsKey(leave.EmployeeId) ? 
                                                        $"{employees[leave.EmployeeId].FirstName} {employees[leave.EmployeeId].LastName}" : 
                                                        "N/A")
                                                </h6>
                                                <small class="text-muted">ID: @leave.EmployeeId</small>
                                            </div>
                                        </div>
                                    </td>
                                    <td class="px-4 py-3">
                                        <div class="d-flex flex-column">
                                            <span>Du @leave.StartDate.ToString("dd/MM/yyyy")</span>
                                            <span>Au @leave.EndDate.ToString("dd/MM/yyyy")</span>
                                        </div>
                                    </td>
                                    <td class="px-4 py-3">
                                        <span class="badge bg-warning-subtle text-warning">@leave.Status</span>
                                    </td>
                                    <td class="px-4 py-3 text-end">
                                        <div class="d-flex gap-2 justify-content-end">
                                            <button class="btn btn-success btn-sm" @onclick="() => ApproveLeave(leave.Id)">
                                                <i class="bi bi-check-lg"></i>
                                            </button>
                                            <button class="btn btn-danger btn-sm" @onclick="() => RejectLeave(leave.Id)">
                                                <i class="bi bi-x-lg"></i>
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="4" class="text-center py-4">
                                    <div class="text-muted">
                                        <i class="bi bi-calendar-x display-6 mb-3"></i>
                                        <p class="mb-0">Aucune demande de congé en attente</p>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<style>
    .avatar {
        width: 40px;
        height: 40px;
        display: flex;
        align-items: center;
        justify-content: center;
    }
</style>