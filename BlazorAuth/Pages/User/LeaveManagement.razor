@page "/user/leaves"
@inject LeavesService LeaveService
@inject NavigationManager NavigationManager
@inject AuthenticationService AuthService

<div class="container my-5">
    <h3 class="text-primary">Demande de Congé</h3>

    @if (isSuccess)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            Demande de congé envoyée avec succès !
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="card shadow-sm mb-4">
        <div class="card-body">
            <EditForm Model="leaveRequest" OnValidSubmit="SubmitLeaveRequest" FormName="leaveForm">
                <DataAnnotationsValidator />
                <ValidationSummary />

                <div class="mb-3">
                    <label for="startDate" class="form-label">Date de début</label>
                    <InputDate id="startDate" class="form-control" @bind-Value="leaveRequest.StartDate" />
                    <ValidationMessage For="@(() => leaveRequest.StartDate)" />
                </div>

                <div class="mb-3">
                    <label for="endDate" class="form-label">Date de fin</label>
                    <InputDate id="endDate" class="form-control" @bind-Value="leaveRequest.EndDate" />
                    <ValidationMessage For="@(() => leaveRequest.EndDate)" />
                </div>

                <button type="submit" class="btn btn-primary">Envoyer</button>
            </EditForm>
        </div>
    </div>

    <h3 class="text-primary">Mes Congés</h3>
    <div class="card shadow-sm">
        <div class="card-body">
            @if (leaves == null)
            {
                <p>Chargement des congés...</p>
            }
            else if (!leaves.Any())
            {
                <p>Aucun congé trouvé.</p>
            }
            else
            {
                <table class="table">
                    <thead>
                        <tr>
                            <th>Date de début</th>
                            <th>Date de fin</th>
                            <th>Statut</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var leave in leaves)
                        {
                            <tr>
                                <td>@leave.StartDate.ToString("dd/MM/yyyy")</td>
                                <td>@leave.EndDate.ToString("dd/MM/yyyy")</td>
                                <td>@leave.Status</td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
        </div>
    </div>
</div>

@code {
    private bool isSuccess;
    private Leave leaveRequest = new Leave { StartDate = DateTime.Today, EndDate = DateTime.Today.AddDays(1) };
    private List<Leave> leaves;

    protected override async Task OnInitializedAsync()
    {
        var userIdString = await AuthService.GetEmployeeId();
        if (int.TryParse(userIdString, out int userId))
        {
            leaves = await LeaveService.GetLeavesByEmployeeAsync(userId);
        }
    }

    private async Task SubmitLeaveRequest()
    {
        try
        {
            var userIdString = await AuthService.GetEmployeeId();
            if (int.TryParse(userIdString, out int userId))
            {
                leaveRequest.EmployeeId = userId;
                await LeaveService.AddLeaveAsync(leaveRequest);
                isSuccess = true;
                leaves = await LeaveService.GetLeavesByEmployeeAsync(userId);
            }
        }
        catch (Exception ex)
        {
            isSuccess = false;
            Console.WriteLine($"Erreur lors de l'envoi de la demande de congé : {ex.Message}");
        }
    }
}