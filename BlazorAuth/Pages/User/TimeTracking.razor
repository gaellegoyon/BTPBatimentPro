@page "/user/attendance"
@inject EmployeeService EmployeeService
@inject NavigationManager NavigationManager
@inject AuthenticationService AuthService
@using System.Globalization

<div class="container-fluid p-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h1 class="fw-bold text-primary mb-1">Pointage</h1>
            <p class="text-muted">Enregistrez votre présence quotidienne</p>
        </div>
        <div class="bg-light rounded-3 px-3 py-2">
            <i class="bi bi-calendar3 me-2"></i>
            <span class="text-muted">@DateTime.Now.ToString("dd MMMM yyyy")</span>
        </div>
    </div>

    <div class="row g-4">
        <!-- Status Card -->
        <div class="col-12 col-md-6">
            <div class="card border-0 shadow-sm h-100">
                <div class="card-body p-4">
                    <div class="d-flex align-items-center gap-3 mb-3">
                        <div class="avatar bg-primary-subtle rounded-circle p-2">
                            <i class="bi bi-clock text-primary"></i>
                        </div>
                        <div>
                            <h5 class="card-title mb-0">État Actuel</h5>
                            <small class="text-muted">@DateTime.Now.ToString("HH:mm")</small>
                        </div>
                    </div>

                    @if (isSuccess)
                    {
                        <div class="alert alert-success border-0 d-flex align-items-center gap-2 mb-0">
                            <i class="bi bi-check-circle-fill"></i>
                            <span>Pointage enregistré avec succès</span>
                        </div>
                    }
                </div>
            </div>
        </div>

        <!-- Action Card -->
        <div class="col-12 col-md-6">
            <div class="card border-0 shadow-sm h-100">
                <div class="card-body p-4">
                    <div class="d-flex align-items-center gap-3 mb-3">
                        <div class="avatar bg-primary-subtle rounded-circle p-2">
                            <i class="bi bi-fingerprint text-primary"></i>
                        </div>
                        <div>
                            <h5 class="card-title mb-0">Action</h5>
                            <small class="text-muted">Enregistrez votre présence</small>
                        </div>
                    </div>

                    <button class="btn btn-primary w-100 d-flex align-items-center justify-content-center gap-2"
                        @onclick="RecordAttendance">
                        <i class="bi bi-check-lg"></i>
                        Pointer ma présence
                    </button>
                </div>
            </div>
        </div>

        <!-- Recent Activity -->
        <div class="col-12">
            <div class="card border-0 shadow-sm">
                <div class="card-body p-4">
                    <h5 class="card-title mb-4">
                        <i class="bi bi-clock-history text-primary me-2"></i>
                        Activité Récente
                    </h5>
                    @if (attendances == null)
                    {
                        <p class="text-muted text-center mb-0">
                            <i class="bi bi-info-circle me-2"></i>
                            Chargement des pointages...
                        </p>
                    }
                    else if (!attendances.Any())
                    {
                        <p class="text-muted text-center mb-0">
                            <i class="bi bi-info-circle me-2"></i>
                            Aucun pointage trouvé.
                        </p>
                    }
                    else
                    {
                        <ul class="list-group">
                            @foreach (var attendance in attendances)
                            {
                                <li class="list-group-item d-flex justify-content-between align-items-center">
                                    <span>@attendance.Date.ToString("dd MMMM yyyy HH:mm")</span>
                                    <span class="badge bg-primary">@attendance.Status</span>
                                </li>
                            }
                        </ul>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .avatar {
        width: 48px;
        height: 48px;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .alert {
        background-color: rgba(25, 135, 84, 0.1);
    }
</style>

@code {
    private bool isSuccess = false;
    private string? employeeId;
    private int employeeIdInt;
    private List<Attendance>? attendances;

    protected override async Task OnInitializedAsync()
    {
        employeeId = await AuthService.GetEmployeeId();
        if (employeeId != null)
        {
            int.TryParse(employeeId, out employeeIdInt);
            await LoadAttendances();
        }
    }

    private async Task RecordAttendance()
    {
        if (employeeIdInt == 0)
        {
            Console.WriteLine("Employee ID is not valid.");
            return;
        }

        var attendance = new Attendance
            {
                EmployeeId = employeeIdInt,
                Date = DateTime.UtcNow,
                Status = "Present"
            };

        try
        {
            await EmployeeService.PostAttendanceAsync(employeeIdInt, attendance);
            isSuccess = true;
            await LoadAttendances(); // Reload attendances after recording
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Erreur lors de l'envoi de la requête : {ex.Message}");
            isSuccess = false;
        }
    }

    private async Task LoadAttendances()
    {
        try
        {
            attendances = await EmployeeService.GetAttendanceAsync(employeeIdInt);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Erreur lors du chargement des pointages : {ex.Message}");
        }
    }
}