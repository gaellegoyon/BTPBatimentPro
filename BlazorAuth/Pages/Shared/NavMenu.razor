@inject AuthenticationService AuthService
@inject NavigationManager NavigationManager
@inject EmployeeService EmployeeService

<div class="sidebar bg-white shadow-sm">
    <div class="sidebar-header p-3 border-bottom">
        <a class="navbar-brand d-flex align-items-center gap-2" href="">
            <span class="fw-bold text-primary">BTPBatimentPro</span>
        </a>
        <button class="btn btn-link nav-toggler d-lg-none"
            onclick="document.querySelector('.sidebar').classList.toggle('show')">
            <i class="bi bi-x-lg"></i>
        </button>
    </div>

    <div class="sidebar-content">
        <div class="user-profile p-3 border-bottom mb-3">
            <div class="d-flex align-items-center gap-3">
                <div class="avatar">
                    <i class="bi bi-person-circle fs-1 text-primary"></i>
                </div>
                <div>
                    <h6 class="mb-1">@userName</h6>
                    <small class="text-muted">@userRole</small>
                </div>
            </div>
        </div>

        <nav class="nav-menu">
            @if (userRoles.Contains("Admin"))
            {
                <div class="menu-section mb-2">
                    <small class="text-uppercase px-3 text-muted fw-bold">Administration</small>

                    <NavLink class="nav-link px-3 py-2 d-flex align-items-center gap-2" href="/admin/dashboard">
                        <i class="bi bi-speedometer2"></i> Dashboard
                    </NavLink>

                    <NavLink class="nav-link px-3 py-2 d-flex align-items-center gap-2" href="/admin/employees">
                        <i class="bi bi-people"></i> Gestion Employés
                    </NavLink>

                    <NavLink class="nav-link px-3 py-2 d-flex align-items-center gap-2" href="/admin/projects">
                        <i class="bi bi-kanban"></i> Projets
                    </NavLink>

                    <NavLink class="nav-link px-3 py-2 d-flex align-items-center gap-2" href="/admin/leaves">
                        <i class="bi bi-calendar-x"></i> Congés
                    </NavLink>
                </div>
            }

            <div class="menu-section mb-2">
                <small class="text-uppercase px-3 text-muted fw-bold">Espace Personnel</small>

                <NavLink class="nav-link px-3 py-2 d-flex align-items-center gap-2" href="/user/dashboard">
                    <i class="bi bi-person-workspace"></i> Mon Tableau de Bord
                </NavLink>

                <NavLink class="nav-link px-3 py-2 d-flex align-items-center gap-2" href="/user/attendance">
                    <i class="bi bi-calendar-check"></i> Présence
                </NavLink>

                <NavLink class="nav-link px-3 py-2 d-flex align-items-center gap-2" href="/user/leaves">
                    <i class="bi bi-calendar-x"></i> Congés
                </NavLink>
            </div>
        </nav>

        <div class="sidebar-footer border-top p-3">
            @if (isAuthenticated)
            {
                <button @onclick="Logout"
                    class="btn btn-outline-danger w-100 d-flex align-items-center justify-content-center gap-2">
                    <i class="bi bi-box-arrow-right"></i>
                    Déconnexion
                </button>
            }
            else
            {
                <NavLink href="/login" class="btn btn-primary w-100 d-flex align-items-center justify-content-center gap-2">
                    <i class="bi bi-box-arrow-in-right"></i>
                    Connexion
                </NavLink>
            }
        </div>
    </div>
</div>

<style>
    .sidebar {
        width: 280px;
        height: 100vh;
        position: fixed;
        left: 0;
        top: 0;
        z-index: 1000;
        transition: all 0.3s ease;
    }

    .logo-img {
        width: 32px;
        height: 32px;
        object-fit: contain;
    }

    .nav-link {
        color: #6c757d;
        transition: all 0.2s ease;
        border-radius: 6px;
        margin: 2px 0;
    }

    .nav-link:hover {
        color: #0d6efd;
        background-color: #f8f9fa;
    }

    .nav-link.active {
        color: #0d6efd;
        background-color: #e7f1ff;
    }

    .menu-section {
        margin-bottom: 1.5rem;
    }

    .nav-toggler {
        display: none;
    }

    (max-width: 992px) {
        .sidebar {
            transform: translateX(-100%);
        }

        .sidebar.show {
            transform: translateX(0);
        }

        .nav-toggler {
            display: block;
            position: absolute;
            right: 1rem;
            top: 1rem;
        }
    }

    .avatar {
        width: 40px;
        height: 40px;
        display: flex;
        align-items: center;
        justify-content: center;
    }
</style>

@code {
    private bool isAuthenticated;
    private List<string> userRoles = new List<string>();
    private string userName = "Utilisateur";
    private string userRole = "Rôle";

    protected override async Task OnInitializedAsync()
    {
        isAuthenticated = await AuthService.IsAuthenticated();
        string userIdString = string.Empty;
        if (isAuthenticated)
        {
            userIdString = await AuthService.GetEmployeeId();
            userRoles = await AuthService.GetUserRoles();
        }
        if (int.TryParse(userIdString, out int userId))
        {
            var employee = await EmployeeService.GetEmployeeByIdAsync(userId);

            if (employee != null)
            {
                userName = $"{employee.FirstName} {employee.LastName}";
                userRole = userRoles.Contains("Admin") ? "Administrator" : "User";
            }
        }
    }
    private async Task Logout()
    {
        await AuthService.Logout();
        isAuthenticated = false;
        NavigationManager.NavigateTo("/login");
    }
}