@page "/admin/leaves"
@inject LeavesService LeavesService
@inject EmployeeService EmployeeService
@rendermode InteractiveServer

@code {
    private List<Leave> leaveRequests = new List<Leave>();
    private Dictionary<int, Employee> employees = new Dictionary<int, Employee>();

    protected override async Task OnInitializedAsync()
    {
        leaveRequests = await LeavesService.GetLeavesValidationAsync();
        foreach (var leave in leaveRequests)
        {
            if (!employees.ContainsKey(leave.EmployeeId))
            {
                var employee = await EmployeeService.GetEmployeeByIdAsync(leave.EmployeeId);
                if (employee != null)
                {
                    employees[leave.EmployeeId] = employee;
                }
            }
        }
    }

    private async Task ApproveLeave(int leaveId)
    {
        await LeavesService.UpdateLeaveStatusAsync(leaveId, "Approved");
        leaveRequests = await LeavesService.GetLeavesValidationAsync();
        await LoadEmployees();
    }

    private async Task RejectLeave(int leaveId)
    {
        await LeavesService.UpdateLeaveStatusAsync(leaveId, "Rejected");
        leaveRequests = await LeavesService.GetLeavesValidationAsync();
        await LoadEmployees();
    }

    private async Task LoadEmployees()
    {
        foreach (var leave in leaveRequests)
        {
            if (!employees.ContainsKey(leave.EmployeeId))
            {
                var employee = await EmployeeService.GetEmployeeByIdAsync(leave.EmployeeId);
                if (employee != null)
                {
                    employees[leave.EmployeeId] = employee;
                }
            }
        }
    }
}

<h3>Demandes de congés</h3>
<table class="table table-hover">
    <thead class="table-dark">
        <tr>
            <th>Prénom</th>
            <th>Nom</th>
            <th>Date de début</th>
            <th>Date de fin</th>
            <th>Statut</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @if (leaveRequests != null && leaveRequests.Any())
        {
            @foreach (var leave in leaveRequests)
            {
                <tr>
                    <td>@(employees.ContainsKey(leave.EmployeeId) ? employees[leave.EmployeeId].FirstName : "N/A")</td>
                    <td>@(employees.ContainsKey(leave.EmployeeId) ? employees[leave.EmployeeId].LastName : "N/A")</td>
                    <td>@leave.StartDate.ToShortDateString()</td>
                    <td>@leave.EndDate.ToShortDateString()</td>
                    <td>@leave.Status</td>
                    <td>
                        <button class="btn btn-success" @onclick="() => ApproveLeave(leave.Id)">Valider</button>
                        <button class="btn btn-danger" @onclick="() => RejectLeave(leave.Id)">Rejeter</button>
                    </td>
                </tr>
            }
        }
        else
        {
            <tr>
                <td colspan="6" class="text-center">Aucune demande de congé</td>
            </tr>
        }
    </tbody>
</table>